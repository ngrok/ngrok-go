// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: comm-channel/v1/comm-channel.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for identifying a client message kind
//
// next-free-field: 2
type ClientMessageKind int32

const (
	ClientMessageKind_TARGET_KIND_UNSPECIFIED ClientMessageKind = 0 // Default for backward compatibility
	ClientMessageKind_K8S_OPERATOR_TELEMETRY  ClientMessageKind = 1
)

// Enum value maps for ClientMessageKind.
var (
	ClientMessageKind_name = map[int32]string{
		0: "TARGET_KIND_UNSPECIFIED",
		1: "K8S_OPERATOR_TELEMETRY",
	}
	ClientMessageKind_value = map[string]int32{
		"TARGET_KIND_UNSPECIFIED": 0,
		"K8S_OPERATOR_TELEMETRY":  1,
	}
)

func (x ClientMessageKind) Enum() *ClientMessageKind {
	p := new(ClientMessageKind)
	*p = x
	return p
}

func (x ClientMessageKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientMessageKind) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_channel_v1_comm_channel_proto_enumTypes[0].Descriptor()
}

func (ClientMessageKind) Type() protoreflect.EnumType {
	return &file_comm_channel_v1_comm_channel_proto_enumTypes[0]
}

func (x ClientMessageKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientMessageKind.Descriptor instead.
func (ClientMessageKind) EnumDescriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{0}
}

type K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind int32

const (
	K8SOperatorTelemetry_AgentEndpointSummary_NONE       K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind = 0
	K8SOperatorTelemetry_AgentEndpointSummary_INLINE     K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind = 1
	K8SOperatorTelemetry_AgentEndpointSummary_TARGET_REF K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind = 2
)

// Enum value maps for K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind.
var (
	K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind_name = map[int32]string{
		0: "NONE",
		1: "INLINE",
		2: "TARGET_REF",
	}
	K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind_value = map[string]int32{
		"NONE":       0,
		"INLINE":     1,
		"TARGET_REF": 2,
	}
)

func (x K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind) Enum() *K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind {
	p := new(K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind)
	*p = x
	return p
}

func (x K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_channel_v1_comm_channel_proto_enumTypes[1].Descriptor()
}

func (K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind) Type() protoreflect.EnumType {
	return &file_comm_channel_v1_comm_channel_proto_enumTypes[1]
}

func (x K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind.Descriptor instead.
func (K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind) EnumDescriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{2, 10, 0}
}

type K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind int32

const (
	K8SOperatorTelemetry_CloudEndpointSummary_NONE       K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind = 0
	K8SOperatorTelemetry_CloudEndpointSummary_INLINE     K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind = 1
	K8SOperatorTelemetry_CloudEndpointSummary_TARGET_REF K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind = 2
)

// Enum value maps for K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind.
var (
	K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind_name = map[int32]string{
		0: "NONE",
		1: "INLINE",
		2: "TARGET_REF",
	}
	K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind_value = map[string]int32{
		"NONE":       0,
		"INLINE":     1,
		"TARGET_REF": 2,
	}
)

func (x K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind) Enum() *K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind {
	p := new(K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind)
	*p = x
	return p
}

func (x K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind) Descriptor() protoreflect.EnumDescriptor {
	return file_comm_channel_v1_comm_channel_proto_enumTypes[2].Descriptor()
}

func (K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind) Type() protoreflect.EnumType {
	return &file_comm_channel_v1_comm_channel_proto_enumTypes[2]
}

func (x K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind.Descriptor instead.
func (K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind) EnumDescriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{2, 11, 0}
}

// Signed message from the client
//
// next-free-field: 3
type SignedClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload   []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`     // Deterministic serialization of ClientMessage
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"` // Signature using client's private key
}

func (x *SignedClientMessage) Reset() {
	*x = SignedClientMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedClientMessage) ProtoMessage() {}

func (x *SignedClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedClientMessage.ProtoReflect.Descriptor instead.
func (*SignedClientMessage) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{0}
}

func (x *SignedClientMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *SignedClientMessage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// Canonical payload (to be signed) from the client.
//
// next-free-field: 2
type ClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*ClientMessage_K8SOperatorTelemetry
	Kind isClientMessage_Kind `protobuf_oneof:"kind"`
}

func (x *ClientMessage) Reset() {
	*x = ClientMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage) ProtoMessage() {}

func (x *ClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage.ProtoReflect.Descriptor instead.
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{1}
}

func (m *ClientMessage) GetKind() isClientMessage_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *ClientMessage) GetK8SOperatorTelemetry() *K8SOperatorTelemetry {
	if x, ok := x.GetKind().(*ClientMessage_K8SOperatorTelemetry); ok {
		return x.K8SOperatorTelemetry
	}
	return nil
}

type isClientMessage_Kind interface {
	isClientMessage_Kind()
}

type ClientMessage_K8SOperatorTelemetry struct {
	K8SOperatorTelemetry *K8SOperatorTelemetry `protobuf:"bytes,1,opt,name=k8s_operator_telemetry,json=k8sOperatorTelemetry,proto3,oneof"`
}

func (*ClientMessage_K8SOperatorTelemetry) isClientMessage_Kind() {}

// Telemetry report from the k8s operator
//
// next-free-field: 19
type K8SOperatorTelemetry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region                string                                       `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	ServerAddr            string                                       `protobuf:"bytes,2,opt,name=server_addr,json=serverAddr,proto3" json:"server_addr,omitempty"`
	ApiUrl                string                                       `protobuf:"bytes,3,opt,name=api_url,json=apiUrl,proto3" json:"api_url,omitempty"`
	IngressWatchNamespace string                                       `protobuf:"bytes,4,opt,name=ingress_watch_namespace,json=ingressWatchNamespace,proto3" json:"ingress_watch_namespace,omitempty"`
	ClusterDomain         string                                       `protobuf:"bytes,5,opt,name=cluster_domain,json=clusterDomain,proto3" json:"cluster_domain,omitempty"`
	OneClickDemoMode      bool                                         `protobuf:"varint,6,opt,name=one_click_demo_mode,json=oneClickDemoMode,proto3" json:"one_click_demo_mode,omitempty"`
	BuildInfo             *K8SOperatorTelemetry_BuildInfo              `protobuf:"bytes,7,opt,name=build_info,json=buildInfo,proto3" json:"build_info,omitempty"`
	BindingsFeature       *K8SOperatorTelemetry_BindingsFeature        `protobuf:"bytes,8,opt,name=bindings_feature,json=bindingsFeature,proto3" json:"bindings_feature,omitempty"`
	GatewayApiFeature     *K8SOperatorTelemetry_GatewayAPIFeature      `protobuf:"bytes,9,opt,name=gateway_api_feature,json=gatewayApiFeature,proto3" json:"gateway_api_feature,omitempty"`
	IngressFeature        *K8SOperatorTelemetry_IngressFeature         `protobuf:"bytes,10,opt,name=ingress_feature,json=ingressFeature,proto3" json:"ingress_feature,omitempty"`
	Ingresses             []*K8SOperatorTelemetry_IngressSummary       `protobuf:"bytes,11,rep,name=ingresses,proto3" json:"ingresses,omitempty"`
	Gateways              []*K8SOperatorTelemetry_GatewaySummary       `protobuf:"bytes,12,rep,name=gateways,proto3" json:"gateways,omitempty"`
	HttpRoutes            []*K8SOperatorTelemetry_HTTPRouteSummary     `protobuf:"bytes,13,rep,name=http_routes,json=httpRoutes,proto3" json:"http_routes,omitempty"`
	TcpRoutes             []*K8SOperatorTelemetry_TCPRouteSummary      `protobuf:"bytes,14,rep,name=tcp_routes,json=tcpRoutes,proto3" json:"tcp_routes,omitempty"`
	TlsRoutes             []*K8SOperatorTelemetry_TLSRouteSummary      `protobuf:"bytes,15,rep,name=tls_routes,json=tlsRoutes,proto3" json:"tls_routes,omitempty"`
	AgentEndpoints        []*K8SOperatorTelemetry_AgentEndpointSummary `protobuf:"bytes,16,rep,name=agent_endpoints,json=agentEndpoints,proto3" json:"agent_endpoints,omitempty"`
	CloudEndpoints        []*K8SOperatorTelemetry_CloudEndpointSummary `protobuf:"bytes,17,rep,name=cloud_endpoints,json=cloudEndpoints,proto3" json:"cloud_endpoints,omitempty"`
	BoundEndpoints        []*K8SOperatorTelemetry_BoundEndpointSummary `protobuf:"bytes,18,rep,name=bound_endpoints,json=boundEndpoints,proto3" json:"bound_endpoints,omitempty"`
}

func (x *K8SOperatorTelemetry) Reset() {
	*x = K8SOperatorTelemetry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SOperatorTelemetry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SOperatorTelemetry) ProtoMessage() {}

func (x *K8SOperatorTelemetry) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SOperatorTelemetry.ProtoReflect.Descriptor instead.
func (*K8SOperatorTelemetry) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{2}
}

func (x *K8SOperatorTelemetry) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *K8SOperatorTelemetry) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

func (x *K8SOperatorTelemetry) GetApiUrl() string {
	if x != nil {
		return x.ApiUrl
	}
	return ""
}

func (x *K8SOperatorTelemetry) GetIngressWatchNamespace() string {
	if x != nil {
		return x.IngressWatchNamespace
	}
	return ""
}

func (x *K8SOperatorTelemetry) GetClusterDomain() string {
	if x != nil {
		return x.ClusterDomain
	}
	return ""
}

func (x *K8SOperatorTelemetry) GetOneClickDemoMode() bool {
	if x != nil {
		return x.OneClickDemoMode
	}
	return false
}

func (x *K8SOperatorTelemetry) GetBuildInfo() *K8SOperatorTelemetry_BuildInfo {
	if x != nil {
		return x.BuildInfo
	}
	return nil
}

func (x *K8SOperatorTelemetry) GetBindingsFeature() *K8SOperatorTelemetry_BindingsFeature {
	if x != nil {
		return x.BindingsFeature
	}
	return nil
}

func (x *K8SOperatorTelemetry) GetGatewayApiFeature() *K8SOperatorTelemetry_GatewayAPIFeature {
	if x != nil {
		return x.GatewayApiFeature
	}
	return nil
}

func (x *K8SOperatorTelemetry) GetIngressFeature() *K8SOperatorTelemetry_IngressFeature {
	if x != nil {
		return x.IngressFeature
	}
	return nil
}

func (x *K8SOperatorTelemetry) GetIngresses() []*K8SOperatorTelemetry_IngressSummary {
	if x != nil {
		return x.Ingresses
	}
	return nil
}

func (x *K8SOperatorTelemetry) GetGateways() []*K8SOperatorTelemetry_GatewaySummary {
	if x != nil {
		return x.Gateways
	}
	return nil
}

func (x *K8SOperatorTelemetry) GetHttpRoutes() []*K8SOperatorTelemetry_HTTPRouteSummary {
	if x != nil {
		return x.HttpRoutes
	}
	return nil
}

func (x *K8SOperatorTelemetry) GetTcpRoutes() []*K8SOperatorTelemetry_TCPRouteSummary {
	if x != nil {
		return x.TcpRoutes
	}
	return nil
}

func (x *K8SOperatorTelemetry) GetTlsRoutes() []*K8SOperatorTelemetry_TLSRouteSummary {
	if x != nil {
		return x.TlsRoutes
	}
	return nil
}

func (x *K8SOperatorTelemetry) GetAgentEndpoints() []*K8SOperatorTelemetry_AgentEndpointSummary {
	if x != nil {
		return x.AgentEndpoints
	}
	return nil
}

func (x *K8SOperatorTelemetry) GetCloudEndpoints() []*K8SOperatorTelemetry_CloudEndpointSummary {
	if x != nil {
		return x.CloudEndpoints
	}
	return nil
}

func (x *K8SOperatorTelemetry) GetBoundEndpoints() []*K8SOperatorTelemetry_BoundEndpointSummary {
	if x != nil {
		return x.BoundEndpoints
	}
	return nil
}

// Signed message from the server
//
// next-free-field: 3
type SignedServerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload   []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`     // Deterministic serialization of ServerMessage
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"` // Signature using server's private key
}

func (x *SignedServerMessage) Reset() {
	*x = SignedServerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedServerMessage) ProtoMessage() {}

func (x *SignedServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedServerMessage.ProtoReflect.Descriptor instead.
func (*SignedServerMessage) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{3}
}

func (x *SignedServerMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *SignedServerMessage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// Canonical payload (to be signed) from the server.
//
// next-free-field: 2
type ServerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*ServerMessage_SetReportingInterval
	Kind isServerMessage_Kind `protobuf_oneof:"kind"`
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{4}
}

func (m *ServerMessage) GetKind() isServerMessage_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *ServerMessage) GetSetReportingInterval() *SetReportingInterval {
	if x, ok := x.GetKind().(*ServerMessage_SetReportingInterval); ok {
		return x.SetReportingInterval
	}
	return nil
}

type isServerMessage_Kind interface {
	isServerMessage_Kind()
}

type ServerMessage_SetReportingInterval struct {
	SetReportingInterval *SetReportingInterval `protobuf:"bytes,1,opt,name=set_reporting_interval,json=setReportingInterval,proto3,oneof"`
}

func (*ServerMessage_SetReportingInterval) isServerMessage_Kind() {}

// Specifies how often the client should send telemetry data.
// If zero, telemetry reporting should be disabled.
//
// next-free-field: 4
type SetReportingInterval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinInterval *durationpb.Duration `protobuf:"bytes,1,opt,name=min_interval,json=minInterval,proto3" json:"min_interval,omitempty"`
	MaxInterval *durationpb.Duration `protobuf:"bytes,2,opt,name=max_interval,json=maxInterval,proto3" json:"max_interval,omitempty"`
	MessageKind ClientMessageKind    `protobuf:"varint,3,opt,name=message_kind,json=messageKind,proto3,enum=sync_bridge.ClientMessageKind" json:"message_kind,omitempty"`
}

func (x *SetReportingInterval) Reset() {
	*x = SetReportingInterval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetReportingInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetReportingInterval) ProtoMessage() {}

func (x *SetReportingInterval) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetReportingInterval.ProtoReflect.Descriptor instead.
func (*SetReportingInterval) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{5}
}

func (x *SetReportingInterval) GetMinInterval() *durationpb.Duration {
	if x != nil {
		return x.MinInterval
	}
	return nil
}

func (x *SetReportingInterval) GetMaxInterval() *durationpb.Duration {
	if x != nil {
		return x.MaxInterval
	}
	return nil
}

func (x *SetReportingInterval) GetMessageKind() ClientMessageKind {
	if x != nil {
		return x.MessageKind
	}
	return ClientMessageKind_TARGET_KIND_UNSPECIFIED
}

// next-free-field: 4
type K8SOperatorTelemetry_BuildInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	GitCommit string `protobuf:"bytes,2,opt,name=git_commit,json=gitCommit,proto3" json:"git_commit,omitempty"`
	GoVersion string `protobuf:"bytes,3,opt,name=go_version,json=goVersion,proto3" json:"go_version,omitempty"`
}

func (x *K8SOperatorTelemetry_BuildInfo) Reset() {
	*x = K8SOperatorTelemetry_BuildInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SOperatorTelemetry_BuildInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SOperatorTelemetry_BuildInfo) ProtoMessage() {}

func (x *K8SOperatorTelemetry_BuildInfo) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SOperatorTelemetry_BuildInfo.ProtoReflect.Descriptor instead.
func (*K8SOperatorTelemetry_BuildInfo) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{2, 0}
}

func (x *K8SOperatorTelemetry_BuildInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *K8SOperatorTelemetry_BuildInfo) GetGitCommit() string {
	if x != nil {
		return x.GitCommit
	}
	return ""
}

func (x *K8SOperatorTelemetry_BuildInfo) GetGoVersion() string {
	if x != nil {
		return x.GoVersion
	}
	return ""
}

// next-free-field: 6
type K8SOperatorTelemetry_BindingsFeature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled            bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	EndpointSelectors  []string `protobuf:"bytes,2,rep,name=endpoint_selectors,json=endpointSelectors,proto3" json:"endpoint_selectors,omitempty"`
	ServiceAnnotations string   `protobuf:"bytes,3,opt,name=service_annotations,json=serviceAnnotations,proto3" json:"service_annotations,omitempty"`
	ServiceLabels      string   `protobuf:"bytes,4,opt,name=service_labels,json=serviceLabels,proto3" json:"service_labels,omitempty"`
	IngressEndpoint    string   `protobuf:"bytes,5,opt,name=ingress_endpoint,json=ingressEndpoint,proto3" json:"ingress_endpoint,omitempty"`
}

func (x *K8SOperatorTelemetry_BindingsFeature) Reset() {
	*x = K8SOperatorTelemetry_BindingsFeature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SOperatorTelemetry_BindingsFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SOperatorTelemetry_BindingsFeature) ProtoMessage() {}

func (x *K8SOperatorTelemetry_BindingsFeature) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SOperatorTelemetry_BindingsFeature.ProtoReflect.Descriptor instead.
func (*K8SOperatorTelemetry_BindingsFeature) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{2, 1}
}

func (x *K8SOperatorTelemetry_BindingsFeature) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *K8SOperatorTelemetry_BindingsFeature) GetEndpointSelectors() []string {
	if x != nil {
		return x.EndpointSelectors
	}
	return nil
}

func (x *K8SOperatorTelemetry_BindingsFeature) GetServiceAnnotations() string {
	if x != nil {
		return x.ServiceAnnotations
	}
	return ""
}

func (x *K8SOperatorTelemetry_BindingsFeature) GetServiceLabels() string {
	if x != nil {
		return x.ServiceLabels
	}
	return ""
}

func (x *K8SOperatorTelemetry_BindingsFeature) GetIngressEndpoint() string {
	if x != nil {
		return x.IngressEndpoint
	}
	return ""
}

// next-free-field: 6
type K8SOperatorTelemetry_GatewayAPIFeature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled                       bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	CrdsInstalled                 bool `protobuf:"varint,2,opt,name=crds_installed,json=crdsInstalled,proto3" json:"crds_installed,omitempty"`
	DisableGatewayReferenceGrants bool `protobuf:"varint,3,opt,name=disable_gateway_reference_grants,json=disableGatewayReferenceGrants,proto3" json:"disable_gateway_reference_grants,omitempty"`
	TlsRouteCrdInstalled          bool `protobuf:"varint,4,opt,name=tls_route_crd_installed,json=tlsRouteCrdInstalled,proto3" json:"tls_route_crd_installed,omitempty"`
	TcpRouteCrdInstalled          bool `protobuf:"varint,5,opt,name=tcp_route_crd_installed,json=tcpRouteCrdInstalled,proto3" json:"tcp_route_crd_installed,omitempty"`
}

func (x *K8SOperatorTelemetry_GatewayAPIFeature) Reset() {
	*x = K8SOperatorTelemetry_GatewayAPIFeature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SOperatorTelemetry_GatewayAPIFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SOperatorTelemetry_GatewayAPIFeature) ProtoMessage() {}

func (x *K8SOperatorTelemetry_GatewayAPIFeature) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SOperatorTelemetry_GatewayAPIFeature.ProtoReflect.Descriptor instead.
func (*K8SOperatorTelemetry_GatewayAPIFeature) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{2, 2}
}

func (x *K8SOperatorTelemetry_GatewayAPIFeature) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *K8SOperatorTelemetry_GatewayAPIFeature) GetCrdsInstalled() bool {
	if x != nil {
		return x.CrdsInstalled
	}
	return false
}

func (x *K8SOperatorTelemetry_GatewayAPIFeature) GetDisableGatewayReferenceGrants() bool {
	if x != nil {
		return x.DisableGatewayReferenceGrants
	}
	return false
}

func (x *K8SOperatorTelemetry_GatewayAPIFeature) GetTlsRouteCrdInstalled() bool {
	if x != nil {
		return x.TlsRouteCrdInstalled
	}
	return false
}

func (x *K8SOperatorTelemetry_GatewayAPIFeature) GetTcpRouteCrdInstalled() bool {
	if x != nil {
		return x.TcpRouteCrdInstalled
	}
	return false
}

// next-free-field: 2
type K8SOperatorTelemetry_IngressFeature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *K8SOperatorTelemetry_IngressFeature) Reset() {
	*x = K8SOperatorTelemetry_IngressFeature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SOperatorTelemetry_IngressFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SOperatorTelemetry_IngressFeature) ProtoMessage() {}

func (x *K8SOperatorTelemetry_IngressFeature) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SOperatorTelemetry_IngressFeature.ProtoReflect.Descriptor instead.
func (*K8SOperatorTelemetry_IngressFeature) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{2, 3}
}

func (x *K8SOperatorTelemetry_IngressFeature) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// next-free-field: 7
type K8SOperatorTelemetry_IngressSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                      string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace                 string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	TrafficPolicyAnnotation   *string  `protobuf:"bytes,3,opt,name=traffic_policy_annotation,json=trafficPolicyAnnotation,proto3,oneof" json:"traffic_policy_annotation,omitempty"`
	BindingsAnnotation        []string `protobuf:"bytes,4,rep,name=bindings_annotation,json=bindingsAnnotation,proto3" json:"bindings_annotation,omitempty"`
	PoolingAnnotation         *bool    `protobuf:"varint,5,opt,name=pooling_annotation,json=poolingAnnotation,proto3,oneof" json:"pooling_annotation,omitempty"`
	MappingStrategyAnnotation *string  `protobuf:"bytes,6,opt,name=mapping_strategy_annotation,json=mappingStrategyAnnotation,proto3,oneof" json:"mapping_strategy_annotation,omitempty"`
}

func (x *K8SOperatorTelemetry_IngressSummary) Reset() {
	*x = K8SOperatorTelemetry_IngressSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SOperatorTelemetry_IngressSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SOperatorTelemetry_IngressSummary) ProtoMessage() {}

func (x *K8SOperatorTelemetry_IngressSummary) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SOperatorTelemetry_IngressSummary.ProtoReflect.Descriptor instead.
func (*K8SOperatorTelemetry_IngressSummary) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{2, 4}
}

func (x *K8SOperatorTelemetry_IngressSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *K8SOperatorTelemetry_IngressSummary) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *K8SOperatorTelemetry_IngressSummary) GetTrafficPolicyAnnotation() string {
	if x != nil && x.TrafficPolicyAnnotation != nil {
		return *x.TrafficPolicyAnnotation
	}
	return ""
}

func (x *K8SOperatorTelemetry_IngressSummary) GetBindingsAnnotation() []string {
	if x != nil {
		return x.BindingsAnnotation
	}
	return nil
}

func (x *K8SOperatorTelemetry_IngressSummary) GetPoolingAnnotation() bool {
	if x != nil && x.PoolingAnnotation != nil {
		return *x.PoolingAnnotation
	}
	return false
}

func (x *K8SOperatorTelemetry_IngressSummary) GetMappingStrategyAnnotation() string {
	if x != nil && x.MappingStrategyAnnotation != nil {
		return *x.MappingStrategyAnnotation
	}
	return ""
}

// next-free-field: 7
type K8SOperatorTelemetry_GatewaySummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                      string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace                 string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	TrafficPolicyAnnotation   *string  `protobuf:"bytes,3,opt,name=traffic_policy_annotation,json=trafficPolicyAnnotation,proto3,oneof" json:"traffic_policy_annotation,omitempty"`
	BindingsAnnotation        []string `protobuf:"bytes,4,rep,name=bindings_annotation,json=bindingsAnnotation,proto3" json:"bindings_annotation,omitempty"`
	PoolingAnnotation         *bool    `protobuf:"varint,5,opt,name=pooling_annotation,json=poolingAnnotation,proto3,oneof" json:"pooling_annotation,omitempty"`
	MappingStrategyAnnotation *string  `protobuf:"bytes,6,opt,name=mapping_strategy_annotation,json=mappingStrategyAnnotation,proto3,oneof" json:"mapping_strategy_annotation,omitempty"`
}

func (x *K8SOperatorTelemetry_GatewaySummary) Reset() {
	*x = K8SOperatorTelemetry_GatewaySummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SOperatorTelemetry_GatewaySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SOperatorTelemetry_GatewaySummary) ProtoMessage() {}

func (x *K8SOperatorTelemetry_GatewaySummary) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SOperatorTelemetry_GatewaySummary.ProtoReflect.Descriptor instead.
func (*K8SOperatorTelemetry_GatewaySummary) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{2, 5}
}

func (x *K8SOperatorTelemetry_GatewaySummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *K8SOperatorTelemetry_GatewaySummary) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *K8SOperatorTelemetry_GatewaySummary) GetTrafficPolicyAnnotation() string {
	if x != nil && x.TrafficPolicyAnnotation != nil {
		return *x.TrafficPolicyAnnotation
	}
	return ""
}

func (x *K8SOperatorTelemetry_GatewaySummary) GetBindingsAnnotation() []string {
	if x != nil {
		return x.BindingsAnnotation
	}
	return nil
}

func (x *K8SOperatorTelemetry_GatewaySummary) GetPoolingAnnotation() bool {
	if x != nil && x.PoolingAnnotation != nil {
		return *x.PoolingAnnotation
	}
	return false
}

func (x *K8SOperatorTelemetry_GatewaySummary) GetMappingStrategyAnnotation() string {
	if x != nil && x.MappingStrategyAnnotation != nil {
		return *x.MappingStrategyAnnotation
	}
	return ""
}

// next-free-field: 3
type K8SOperatorTelemetry_HTTPRouteSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *K8SOperatorTelemetry_HTTPRouteSummary) Reset() {
	*x = K8SOperatorTelemetry_HTTPRouteSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SOperatorTelemetry_HTTPRouteSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SOperatorTelemetry_HTTPRouteSummary) ProtoMessage() {}

func (x *K8SOperatorTelemetry_HTTPRouteSummary) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SOperatorTelemetry_HTTPRouteSummary.ProtoReflect.Descriptor instead.
func (*K8SOperatorTelemetry_HTTPRouteSummary) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{2, 6}
}

func (x *K8SOperatorTelemetry_HTTPRouteSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *K8SOperatorTelemetry_HTTPRouteSummary) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// next-free-field: 3
type K8SOperatorTelemetry_TCPRouteSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *K8SOperatorTelemetry_TCPRouteSummary) Reset() {
	*x = K8SOperatorTelemetry_TCPRouteSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SOperatorTelemetry_TCPRouteSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SOperatorTelemetry_TCPRouteSummary) ProtoMessage() {}

func (x *K8SOperatorTelemetry_TCPRouteSummary) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SOperatorTelemetry_TCPRouteSummary.ProtoReflect.Descriptor instead.
func (*K8SOperatorTelemetry_TCPRouteSummary) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{2, 7}
}

func (x *K8SOperatorTelemetry_TCPRouteSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *K8SOperatorTelemetry_TCPRouteSummary) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// next-free-field: 3
type K8SOperatorTelemetry_TLSRouteSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *K8SOperatorTelemetry_TLSRouteSummary) Reset() {
	*x = K8SOperatorTelemetry_TLSRouteSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SOperatorTelemetry_TLSRouteSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SOperatorTelemetry_TLSRouteSummary) ProtoMessage() {}

func (x *K8SOperatorTelemetry_TLSRouteSummary) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SOperatorTelemetry_TLSRouteSummary.ProtoReflect.Descriptor instead.
func (*K8SOperatorTelemetry_TLSRouteSummary) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{2, 8}
}

func (x *K8SOperatorTelemetry_TLSRouteSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *K8SOperatorTelemetry_TLSRouteSummary) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// next-free-field: 4
type K8SOperatorTelemetry_TranslatedFromResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind      string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *K8SOperatorTelemetry_TranslatedFromResource) Reset() {
	*x = K8SOperatorTelemetry_TranslatedFromResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SOperatorTelemetry_TranslatedFromResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SOperatorTelemetry_TranslatedFromResource) ProtoMessage() {}

func (x *K8SOperatorTelemetry_TranslatedFromResource) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SOperatorTelemetry_TranslatedFromResource.ProtoReflect.Descriptor instead.
func (*K8SOperatorTelemetry_TranslatedFromResource) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{2, 9}
}

func (x *K8SOperatorTelemetry_TranslatedFromResource) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *K8SOperatorTelemetry_TranslatedFromResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *K8SOperatorTelemetry_TranslatedFromResource) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// next-free-field: 6
type K8SOperatorTelemetry_AgentEndpointSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    string                                                      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace               string                                                      `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	TranslatedFromResources []*K8SOperatorTelemetry_TranslatedFromResource              `protobuf:"bytes,3,rep,name=translated_from_resources,json=translatedFromResources,proto3" json:"translated_from_resources,omitempty"`
	Bindings                []string                                                    `protobuf:"bytes,4,rep,name=bindings,proto3" json:"bindings,omitempty"`
	TrafficPolicyKind       K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind `protobuf:"varint,5,opt,name=traffic_policy_kind,json=trafficPolicyKind,proto3,enum=sync_bridge.K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind" json:"traffic_policy_kind,omitempty"`
}

func (x *K8SOperatorTelemetry_AgentEndpointSummary) Reset() {
	*x = K8SOperatorTelemetry_AgentEndpointSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SOperatorTelemetry_AgentEndpointSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SOperatorTelemetry_AgentEndpointSummary) ProtoMessage() {}

func (x *K8SOperatorTelemetry_AgentEndpointSummary) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SOperatorTelemetry_AgentEndpointSummary.ProtoReflect.Descriptor instead.
func (*K8SOperatorTelemetry_AgentEndpointSummary) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{2, 10}
}

func (x *K8SOperatorTelemetry_AgentEndpointSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *K8SOperatorTelemetry_AgentEndpointSummary) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *K8SOperatorTelemetry_AgentEndpointSummary) GetTranslatedFromResources() []*K8SOperatorTelemetry_TranslatedFromResource {
	if x != nil {
		return x.TranslatedFromResources
	}
	return nil
}

func (x *K8SOperatorTelemetry_AgentEndpointSummary) GetBindings() []string {
	if x != nil {
		return x.Bindings
	}
	return nil
}

func (x *K8SOperatorTelemetry_AgentEndpointSummary) GetTrafficPolicyKind() K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind {
	if x != nil {
		return x.TrafficPolicyKind
	}
	return K8SOperatorTelemetry_AgentEndpointSummary_NONE
}

// next-free-field: 7
type K8SOperatorTelemetry_CloudEndpointSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    string                                                      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace               string                                                      `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	TranslatedFromResources []*K8SOperatorTelemetry_TranslatedFromResource              `protobuf:"bytes,3,rep,name=translated_from_resources,json=translatedFromResources,proto3" json:"translated_from_resources,omitempty"`
	Bindings                []string                                                    `protobuf:"bytes,4,rep,name=bindings,proto3" json:"bindings,omitempty"`
	PoolingEnabled          bool                                                        `protobuf:"varint,5,opt,name=pooling_enabled,json=poolingEnabled,proto3" json:"pooling_enabled,omitempty"`
	TrafficPolicyKind       K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind `protobuf:"varint,6,opt,name=traffic_policy_kind,json=trafficPolicyKind,proto3,enum=sync_bridge.K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind" json:"traffic_policy_kind,omitempty"`
}

func (x *K8SOperatorTelemetry_CloudEndpointSummary) Reset() {
	*x = K8SOperatorTelemetry_CloudEndpointSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SOperatorTelemetry_CloudEndpointSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SOperatorTelemetry_CloudEndpointSummary) ProtoMessage() {}

func (x *K8SOperatorTelemetry_CloudEndpointSummary) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SOperatorTelemetry_CloudEndpointSummary.ProtoReflect.Descriptor instead.
func (*K8SOperatorTelemetry_CloudEndpointSummary) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{2, 11}
}

func (x *K8SOperatorTelemetry_CloudEndpointSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *K8SOperatorTelemetry_CloudEndpointSummary) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *K8SOperatorTelemetry_CloudEndpointSummary) GetTranslatedFromResources() []*K8SOperatorTelemetry_TranslatedFromResource {
	if x != nil {
		return x.TranslatedFromResources
	}
	return nil
}

func (x *K8SOperatorTelemetry_CloudEndpointSummary) GetBindings() []string {
	if x != nil {
		return x.Bindings
	}
	return nil
}

func (x *K8SOperatorTelemetry_CloudEndpointSummary) GetPoolingEnabled() bool {
	if x != nil {
		return x.PoolingEnabled
	}
	return false
}

func (x *K8SOperatorTelemetry_CloudEndpointSummary) GetTrafficPolicyKind() K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind {
	if x != nil {
		return x.TrafficPolicyKind
	}
	return K8SOperatorTelemetry_CloudEndpointSummary_NONE
}

// next-free-field: 3
type K8SOperatorTelemetry_BoundEndpointSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string                                            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status *K8SOperatorTelemetry_BoundEndpointSummary_Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *K8SOperatorTelemetry_BoundEndpointSummary) Reset() {
	*x = K8SOperatorTelemetry_BoundEndpointSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SOperatorTelemetry_BoundEndpointSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SOperatorTelemetry_BoundEndpointSummary) ProtoMessage() {}

func (x *K8SOperatorTelemetry_BoundEndpointSummary) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SOperatorTelemetry_BoundEndpointSummary.ProtoReflect.Descriptor instead.
func (*K8SOperatorTelemetry_BoundEndpointSummary) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{2, 12}
}

func (x *K8SOperatorTelemetry_BoundEndpointSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *K8SOperatorTelemetry_BoundEndpointSummary) GetStatus() *K8SOperatorTelemetry_BoundEndpointSummary_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// next-free-field: 3
type K8SOperatorTelemetry_BoundEndpointSummary_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashedName string                                                              `protobuf:"bytes,1,opt,name=hashed_name,json=hashedName,proto3" json:"hashed_name,omitempty"`
	Endpoints  []*K8SOperatorTelemetry_BoundEndpointSummary_Status_BindingEndpoint `protobuf:"bytes,2,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
}

func (x *K8SOperatorTelemetry_BoundEndpointSummary_Status) Reset() {
	*x = K8SOperatorTelemetry_BoundEndpointSummary_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SOperatorTelemetry_BoundEndpointSummary_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SOperatorTelemetry_BoundEndpointSummary_Status) ProtoMessage() {}

func (x *K8SOperatorTelemetry_BoundEndpointSummary_Status) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SOperatorTelemetry_BoundEndpointSummary_Status.ProtoReflect.Descriptor instead.
func (*K8SOperatorTelemetry_BoundEndpointSummary_Status) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{2, 12, 0}
}

func (x *K8SOperatorTelemetry_BoundEndpointSummary_Status) GetHashedName() string {
	if x != nil {
		return x.HashedName
	}
	return ""
}

func (x *K8SOperatorTelemetry_BoundEndpointSummary_Status) GetEndpoints() []*K8SOperatorTelemetry_BoundEndpointSummary_Status_BindingEndpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

// next-free-field: 3
type K8SOperatorTelemetry_BoundEndpointSummary_Status_BindingEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *K8SOperatorTelemetry_BoundEndpointSummary_Status_BindingEndpoint) Reset() {
	*x = K8SOperatorTelemetry_BoundEndpointSummary_Status_BindingEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SOperatorTelemetry_BoundEndpointSummary_Status_BindingEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SOperatorTelemetry_BoundEndpointSummary_Status_BindingEndpoint) ProtoMessage() {}

func (x *K8SOperatorTelemetry_BoundEndpointSummary_Status_BindingEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_comm_channel_v1_comm_channel_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SOperatorTelemetry_BoundEndpointSummary_Status_BindingEndpoint.ProtoReflect.Descriptor instead.
func (*K8SOperatorTelemetry_BoundEndpointSummary_Status_BindingEndpoint) Descriptor() ([]byte, []int) {
	return file_comm_channel_v1_comm_channel_proto_rawDescGZIP(), []int{2, 12, 0, 0}
}

func (x *K8SOperatorTelemetry_BoundEndpointSummary_Status_BindingEndpoint) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *K8SOperatorTelemetry_BoundEndpointSummary_Status_BindingEndpoint) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_comm_channel_v1_comm_channel_proto protoreflect.FileDescriptor

var file_comm_channel_v1_comm_channel_proto_rawDesc = []byte{
	0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x6d, 0x2d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x2d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x4d, 0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x22, 0x72, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x59, 0x0a, 0x16, 0x6b, 0x38, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e,
	0x4b, 0x38, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x14, 0x6b, 0x38, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x42, 0x06, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x22, 0xf8, 0x20, 0x0a, 0x14, 0x4b, 0x38, 0x73, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x12,
	0x36, 0x0a, 0x17, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x2d,
	0x0a, 0x13, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x6d, 0x6f,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6f, 0x6e, 0x65,
	0x43, 0x6c, 0x69, 0x63, 0x6b, 0x44, 0x65, 0x6d, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x4a, 0x0a,
	0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e,
	0x4b, 0x38, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5c, 0x0a, 0x10, 0x62, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x2e, 0x4b, 0x38, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x63, 0x0a, 0x13, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x2e, 0x4b, 0x38, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x41,
	0x50, 0x49, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x11, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x41, 0x70, 0x69, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x59, 0x0a, 0x0f,
	0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x2e, 0x4b, 0x38, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x69, 0x6e, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x4b, 0x38, 0x73, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x49, 0x6e,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x09, 0x69, 0x6e,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x08, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x4b, 0x38, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x08, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x73, 0x12, 0x53, 0x0a, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x4b, 0x38, 0x73, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x48, 0x54,
	0x54, 0x50, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0a,
	0x68, 0x74, 0x74, 0x70, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x0a, 0x74, 0x63,
	0x70, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x4b, 0x38, 0x73,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x2e, 0x54, 0x43, 0x50, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x09, 0x74, 0x63, 0x70, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x0a,
	0x74, 0x6c, 0x73, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x4b,
	0x38, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x74, 0x72, 0x79, 0x2e, 0x54, 0x4c, 0x53, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x09, 0x74, 0x6c, 0x73, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x5f,
	0x0a, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x62,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x4b, 0x38, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x0e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x5f, 0x0a, 0x0f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x4b, 0x38, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x12, 0x5f, 0x0a, 0x0f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x4b, 0x38, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x0e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x1a, 0x63, 0x0a, 0x09, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x74, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6f, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0xdd, 0x01, 0x0a, 0x0f, 0x42, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x11, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x69,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x8b, 0x02, 0x0a, 0x11, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x41, 0x50, 0x49, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72, 0x64, 0x73, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x63, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x47, 0x0a,
	0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x17, 0x74, 0x6c, 0x73, 0x5f, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x74, 0x6c, 0x73, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x43, 0x72, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x35, 0x0a,
	0x17, 0x74, 0x63, 0x70, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x64, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14,
	0x74, 0x63, 0x70, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x43, 0x72, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x65, 0x64, 0x1a, 0x2a, 0x0a, 0x0e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x1a, 0x82, 0x03, 0x0a, 0x0e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x19, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x17, 0x74, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x13, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x73, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x12, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x41, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x12, 0x70, 0x6f, 0x6f, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x11, 0x70, 0x6f, 0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x1b, 0x6d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x19, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x15,
	0x0a, 0x13, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x1e, 0x0a, 0x1c, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x82, 0x03, 0x0a, 0x0e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x19, 0x74, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x17, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x13, 0x62,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x73, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x12,
	0x70, 0x6f, 0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x11, 0x70, 0x6f, 0x6f, 0x6c,
	0x69, 0x6e, 0x67, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x43, 0x0a, 0x1b, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x19, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x5f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x1e, 0x0a, 0x1c, 0x5f, 0x6d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x44, 0x0a, 0x10, 0x48, 0x54,
	0x54, 0x50, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x1a, 0x43, 0x0a, 0x0f, 0x54, 0x43, 0x50, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x1a, 0x43, 0x0a, 0x0f, 0x54, 0x4c, 0x53, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x1a, 0x5e, 0x0a, 0x16, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x1a, 0x8f, 0x03, 0x0a, 0x14, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x74, 0x0a, 0x19, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x4b, 0x38, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x17, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72,
	0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x78, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x48, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x2e, 0x4b, 0x38, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x54, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x11,
	0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4b, 0x69, 0x6e,
	0x64, 0x22, 0x39, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x46, 0x10, 0x02, 0x1a, 0xb8, 0x03, 0x0a,
	0x14, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x74, 0x0a, 0x19, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x4b, 0x38, 0x73, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x17, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6f, 0x6f,
	0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x70, 0x6f, 0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x78, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x48, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x4b, 0x38,
	0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74,
	0x72, 0x79, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x11, 0x74, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4b, 0x69, 0x6e, 0x64, 0x22, 0x39, 0x0a, 0x11,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4b, 0x69, 0x6e,
	0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x49,
	0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x41, 0x52, 0x47, 0x45,
	0x54, 0x5f, 0x52, 0x45, 0x46, 0x10, 0x02, 0x1a, 0xd5, 0x02, 0x0a, 0x14, 0x42, 0x6f, 0x75, 0x6e,
	0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x55, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x2e, 0x4b, 0x38, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0xd1, 0x01, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x61, 0x73,
	0x68, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x6b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x4b, 0x38, 0x73, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x6f,
	0x75, 0x6e, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x1a, 0x39, 0x0a, 0x0f, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x4d, 0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x72,
	0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x59, 0x0a, 0x16, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x48, 0x00, 0x52, 0x14, 0x73, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x22, 0xd5, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x3c, 0x0a, 0x0c, 0x6d,
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6d, 0x69,
	0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x3c, 0x0a, 0x0c, 0x6d, 0x61, 0x78,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x73, 0x79, 0x6e, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0b, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x2a, 0x4c, 0x0a, 0x11, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12,
	0x1b, 0x0a, 0x17, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16,
	0x4b, 0x38, 0x53, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x45, 0x4c,
	0x45, 0x4d, 0x45, 0x54, 0x52, 0x59, 0x10, 0x01, 0x32, 0x66, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50,
	0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x20, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x20, 0x2e, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x28, 0x01, 0x30, 0x01,
	0x42, 0x9a, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x62, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x42, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67,
	0x2e, 0x6e, 0x67, 0x72, 0x6f, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x67, 0x72, 0x6f, 0x6b,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x2d, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58, 0xaa, 0x02, 0x0a,
	0x53, 0x79, 0x6e, 0x63, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0xca, 0x02, 0x0a, 0x53, 0x79, 0x6e,
	0x63, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0xe2, 0x02, 0x16, 0x53, 0x79, 0x6e, 0x63, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x0a, 0x53, 0x79, 0x6e, 0x63, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_comm_channel_v1_comm_channel_proto_rawDescOnce sync.Once
	file_comm_channel_v1_comm_channel_proto_rawDescData = file_comm_channel_v1_comm_channel_proto_rawDesc
)

func file_comm_channel_v1_comm_channel_proto_rawDescGZIP() []byte {
	file_comm_channel_v1_comm_channel_proto_rawDescOnce.Do(func() {
		file_comm_channel_v1_comm_channel_proto_rawDescData = protoimpl.X.CompressGZIP(file_comm_channel_v1_comm_channel_proto_rawDescData)
	})
	return file_comm_channel_v1_comm_channel_proto_rawDescData
}

var file_comm_channel_v1_comm_channel_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_comm_channel_v1_comm_channel_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_comm_channel_v1_comm_channel_proto_goTypes = []interface{}{
	(ClientMessageKind)(0), // 0: sync_bridge.ClientMessageKind
	(K8SOperatorTelemetry_AgentEndpointSummary_TrafficPolicyKind)(0),         // 1: sync_bridge.K8sOperatorTelemetry.AgentEndpointSummary.TrafficPolicyKind
	(K8SOperatorTelemetry_CloudEndpointSummary_TrafficPolicyKind)(0),         // 2: sync_bridge.K8sOperatorTelemetry.CloudEndpointSummary.TrafficPolicyKind
	(*SignedClientMessage)(nil),                                              // 3: sync_bridge.SignedClientMessage
	(*ClientMessage)(nil),                                                    // 4: sync_bridge.ClientMessage
	(*K8SOperatorTelemetry)(nil),                                             // 5: sync_bridge.K8sOperatorTelemetry
	(*SignedServerMessage)(nil),                                              // 6: sync_bridge.SignedServerMessage
	(*ServerMessage)(nil),                                                    // 7: sync_bridge.ServerMessage
	(*SetReportingInterval)(nil),                                             // 8: sync_bridge.SetReportingInterval
	(*K8SOperatorTelemetry_BuildInfo)(nil),                                   // 9: sync_bridge.K8sOperatorTelemetry.BuildInfo
	(*K8SOperatorTelemetry_BindingsFeature)(nil),                             // 10: sync_bridge.K8sOperatorTelemetry.BindingsFeature
	(*K8SOperatorTelemetry_GatewayAPIFeature)(nil),                           // 11: sync_bridge.K8sOperatorTelemetry.GatewayAPIFeature
	(*K8SOperatorTelemetry_IngressFeature)(nil),                              // 12: sync_bridge.K8sOperatorTelemetry.IngressFeature
	(*K8SOperatorTelemetry_IngressSummary)(nil),                              // 13: sync_bridge.K8sOperatorTelemetry.IngressSummary
	(*K8SOperatorTelemetry_GatewaySummary)(nil),                              // 14: sync_bridge.K8sOperatorTelemetry.GatewaySummary
	(*K8SOperatorTelemetry_HTTPRouteSummary)(nil),                            // 15: sync_bridge.K8sOperatorTelemetry.HTTPRouteSummary
	(*K8SOperatorTelemetry_TCPRouteSummary)(nil),                             // 16: sync_bridge.K8sOperatorTelemetry.TCPRouteSummary
	(*K8SOperatorTelemetry_TLSRouteSummary)(nil),                             // 17: sync_bridge.K8sOperatorTelemetry.TLSRouteSummary
	(*K8SOperatorTelemetry_TranslatedFromResource)(nil),                      // 18: sync_bridge.K8sOperatorTelemetry.TranslatedFromResource
	(*K8SOperatorTelemetry_AgentEndpointSummary)(nil),                        // 19: sync_bridge.K8sOperatorTelemetry.AgentEndpointSummary
	(*K8SOperatorTelemetry_CloudEndpointSummary)(nil),                        // 20: sync_bridge.K8sOperatorTelemetry.CloudEndpointSummary
	(*K8SOperatorTelemetry_BoundEndpointSummary)(nil),                        // 21: sync_bridge.K8sOperatorTelemetry.BoundEndpointSummary
	(*K8SOperatorTelemetry_BoundEndpointSummary_Status)(nil),                 // 22: sync_bridge.K8sOperatorTelemetry.BoundEndpointSummary.Status
	(*K8SOperatorTelemetry_BoundEndpointSummary_Status_BindingEndpoint)(nil), // 23: sync_bridge.K8sOperatorTelemetry.BoundEndpointSummary.Status.BindingEndpoint
	(*durationpb.Duration)(nil),                                              // 24: google.protobuf.Duration
}
var file_comm_channel_v1_comm_channel_proto_depIdxs = []int32{
	5,  // 0: sync_bridge.ClientMessage.k8s_operator_telemetry:type_name -> sync_bridge.K8sOperatorTelemetry
	9,  // 1: sync_bridge.K8sOperatorTelemetry.build_info:type_name -> sync_bridge.K8sOperatorTelemetry.BuildInfo
	10, // 2: sync_bridge.K8sOperatorTelemetry.bindings_feature:type_name -> sync_bridge.K8sOperatorTelemetry.BindingsFeature
	11, // 3: sync_bridge.K8sOperatorTelemetry.gateway_api_feature:type_name -> sync_bridge.K8sOperatorTelemetry.GatewayAPIFeature
	12, // 4: sync_bridge.K8sOperatorTelemetry.ingress_feature:type_name -> sync_bridge.K8sOperatorTelemetry.IngressFeature
	13, // 5: sync_bridge.K8sOperatorTelemetry.ingresses:type_name -> sync_bridge.K8sOperatorTelemetry.IngressSummary
	14, // 6: sync_bridge.K8sOperatorTelemetry.gateways:type_name -> sync_bridge.K8sOperatorTelemetry.GatewaySummary
	15, // 7: sync_bridge.K8sOperatorTelemetry.http_routes:type_name -> sync_bridge.K8sOperatorTelemetry.HTTPRouteSummary
	16, // 8: sync_bridge.K8sOperatorTelemetry.tcp_routes:type_name -> sync_bridge.K8sOperatorTelemetry.TCPRouteSummary
	17, // 9: sync_bridge.K8sOperatorTelemetry.tls_routes:type_name -> sync_bridge.K8sOperatorTelemetry.TLSRouteSummary
	19, // 10: sync_bridge.K8sOperatorTelemetry.agent_endpoints:type_name -> sync_bridge.K8sOperatorTelemetry.AgentEndpointSummary
	20, // 11: sync_bridge.K8sOperatorTelemetry.cloud_endpoints:type_name -> sync_bridge.K8sOperatorTelemetry.CloudEndpointSummary
	21, // 12: sync_bridge.K8sOperatorTelemetry.bound_endpoints:type_name -> sync_bridge.K8sOperatorTelemetry.BoundEndpointSummary
	8,  // 13: sync_bridge.ServerMessage.set_reporting_interval:type_name -> sync_bridge.SetReportingInterval
	24, // 14: sync_bridge.SetReportingInterval.min_interval:type_name -> google.protobuf.Duration
	24, // 15: sync_bridge.SetReportingInterval.max_interval:type_name -> google.protobuf.Duration
	0,  // 16: sync_bridge.SetReportingInterval.message_kind:type_name -> sync_bridge.ClientMessageKind
	18, // 17: sync_bridge.K8sOperatorTelemetry.AgentEndpointSummary.translated_from_resources:type_name -> sync_bridge.K8sOperatorTelemetry.TranslatedFromResource
	1,  // 18: sync_bridge.K8sOperatorTelemetry.AgentEndpointSummary.traffic_policy_kind:type_name -> sync_bridge.K8sOperatorTelemetry.AgentEndpointSummary.TrafficPolicyKind
	18, // 19: sync_bridge.K8sOperatorTelemetry.CloudEndpointSummary.translated_from_resources:type_name -> sync_bridge.K8sOperatorTelemetry.TranslatedFromResource
	2,  // 20: sync_bridge.K8sOperatorTelemetry.CloudEndpointSummary.traffic_policy_kind:type_name -> sync_bridge.K8sOperatorTelemetry.CloudEndpointSummary.TrafficPolicyKind
	22, // 21: sync_bridge.K8sOperatorTelemetry.BoundEndpointSummary.status:type_name -> sync_bridge.K8sOperatorTelemetry.BoundEndpointSummary.Status
	23, // 22: sync_bridge.K8sOperatorTelemetry.BoundEndpointSummary.Status.endpoints:type_name -> sync_bridge.K8sOperatorTelemetry.BoundEndpointSummary.Status.BindingEndpoint
	3,  // 23: sync_bridge.CommChannelService.Stream:input_type -> sync_bridge.SignedClientMessage
	6,  // 24: sync_bridge.CommChannelService.Stream:output_type -> sync_bridge.SignedServerMessage
	24, // [24:25] is the sub-list for method output_type
	23, // [23:24] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_comm_channel_v1_comm_channel_proto_init() }
func file_comm_channel_v1_comm_channel_proto_init() {
	if File_comm_channel_v1_comm_channel_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_comm_channel_v1_comm_channel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedClientMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SOperatorTelemetry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedServerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetReportingInterval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SOperatorTelemetry_BuildInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SOperatorTelemetry_BindingsFeature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SOperatorTelemetry_GatewayAPIFeature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SOperatorTelemetry_IngressFeature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SOperatorTelemetry_IngressSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SOperatorTelemetry_GatewaySummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SOperatorTelemetry_HTTPRouteSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SOperatorTelemetry_TCPRouteSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SOperatorTelemetry_TLSRouteSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SOperatorTelemetry_TranslatedFromResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SOperatorTelemetry_AgentEndpointSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SOperatorTelemetry_CloudEndpointSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SOperatorTelemetry_BoundEndpointSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SOperatorTelemetry_BoundEndpointSummary_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comm_channel_v1_comm_channel_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SOperatorTelemetry_BoundEndpointSummary_Status_BindingEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_comm_channel_v1_comm_channel_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ClientMessage_K8SOperatorTelemetry)(nil),
	}
	file_comm_channel_v1_comm_channel_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*ServerMessage_SetReportingInterval)(nil),
	}
	file_comm_channel_v1_comm_channel_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_comm_channel_v1_comm_channel_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_comm_channel_v1_comm_channel_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_comm_channel_v1_comm_channel_proto_goTypes,
		DependencyIndexes: file_comm_channel_v1_comm_channel_proto_depIdxs,
		EnumInfos:         file_comm_channel_v1_comm_channel_proto_enumTypes,
		MessageInfos:      file_comm_channel_v1_comm_channel_proto_msgTypes,
	}.Build()
	File_comm_channel_v1_comm_channel_proto = out.File
	file_comm_channel_v1_comm_channel_proto_rawDesc = nil
	file_comm_channel_v1_comm_channel_proto_goTypes = nil
	file_comm_channel_v1_comm_channel_proto_depIdxs = nil
}
